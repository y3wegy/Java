<?xml version="1.0" encoding="UTF-8"?>
<CheckPoints>
    <Param>
        <!--
            these parameters will be used in keyword "CheckFundLevel" ,below is description:
            FundStatusTimeOut: timeout check this Fund status  from WP to P
            ReleaseType:UI release type
            OF:UI input orignal face value.if this node not exist,will not input in UI
            OpenPrice:same as "OF"
            ShareValue:same as "OF"
            CusipOpenPrice:same "OF"
            ReleaseType: same as event level "ReleaseType"
            Screens:what MCH should be take screenshot before replay.if contains "BGMM" ,you must set CICS node value
        -->
        <FundId>26B4</FundId>
        <Abbr>6B4</Abbr>
        <CICS>REDS</CICS>
        <FundStatusTimeOut>600</FundStatusTimeOut>
        <ReleaseType>RELEASE</ReleaseType>
        <OF>1000</OF>
        <OpenPrice>1000</OpenPrice>
        <ShareValue>1000</ShareValue>
        <CusipOpenPrice>1000</CusipOpenPrice>
        <Screens>BPOP,BPOS,CPOS,BGMM,BRFD,BCAF,BRCV,BRIC,CPLS</Screens>
    </Param>
    <!--
        Setup will be execute after Event level Setup in keyword "INITALSCRIPT",fund level Setup just for  this fund
    -->
    <SetUp>
        <DBSetUp>
            <Sql>update opgcep2.gce_corp_actions set vol_bond_exch_proc_date=3 where fund_id =#FUNDID#</Sql>
        </DBSetUp>
        <UGMM>
            <REC_TYPE TYPE="TXT">01</REC_TYPE>
            <INCOMEDATE1 TYPE="DATE" SCOPE="D">
                <A>#FIRSTOFMONTH#</A>
                <B>-12</B>
            </INCOMEDATE1>
            <INCOMEDATE2 TYPE="DATE" SCOPE="M">
                <A>#INCOMEDATE1#</A>
                <B>6</B>
            </INCOMEDATE2>
            <FREQ TYPE="TXT">2</FREQ>
            <ACCRUAL TYPE="TXT">Y</ACCRUAL>
            <COUPON TYPE="TXT">1.000000</COUPON>
        </UGMM>
        <BGIR>
            <abbr>6B4</abbr>
            <PAR>#Param4#</PAR>
            <INC>0.5</INC>
            <LOC>DTC</LOC>
            <REC_TYPE>00</REC_TYPE>
        </BGIR>
    </SetUp>
    <!--
        BeforeEventLevel will execute before fund UI release in keyword "CheckFundLevel"
        script will go to "DBCheck" verify  after Wait node verify successfully or timeout
        If this node verify failed ,script will ignore this fund verify(UI release,CART and MCH verify  will not execute)
    -->
    <BeforeFundLevel>
        <Wait TIMEOUT="1800" Switch="Y">
            <Point TABLENAME="FUND_POSITION" SAVE="FALSE">
                <Sql>
                    <![CDATA[
					SELECT COUNT(*) as NUM FROM OPGCEP2.CORP_ACTION_FUND_POSITION A, OPGCEP2.CORP_ACTION_MASTER_EVENT B WHERE A.CA_MASTER_EVENT_ID=B.CA_MASTER_EVENT_ID AND B.CA_EVENT_ID =#EVENTID# and A.CA_STATUS_TYPE_CD<>'WPV' and FUND_ID=#FUNDID#
					]]></Sql>
                <Columns>
                    <NUM TYPE="TXT" OPERATION="EQUAL">1</NUM>
                </Columns>
            </Point>
        </Wait>
        <DBCheck TERMINATE="false">
            <Point TABLENAME="GCAL_USE_CASE_TRANSACTION" SAVE="FALSE">
                <Sql>SELECT STATUS,RESULT_CODE FROM OPGCEP2.GCAL_USE_CASE_TRANSACTION WHERE GC_GUID = HEXTORAW(#GUID#)
                    AND SCENARIO_ID='4501'
                </Sql>
                <Columns>
                    <STATUS TYPE="TXT" OPERATION="EQUAL">COA16_EL_VERIY</STATUS>
                    <RESULT_CODE TYPE="TXT" OPERATION="EQUAL">DONE</RESULT_CODE>
                </Columns>
            </Point>
            <Point TABLENAME="Processing DATE NSRD" SAVE="false">
                <Sql>select vol_bond_exch_proc_date from opgcep2.gce_corp_actions where fund_id=#FUNDID#
                </Sql>
                <Columns>
                    <vol_bond_exch_proc_date TYPE="TXT" OPERATION="EQUAL">3</vol_bond_exch_proc_date>
                </Columns>
            </Point>

        </DBCheck>
    </BeforeFundLevel>
    <!--
        same as EventFlowBoost
    -->
    <FundFlowBoost>
        <DB>
            <Sql>UPDATE GCE_META.GCAL_WORKFLOW_ACTIVITY SET EXPIRATION_TIME=SYSTIMESTAMP WHERE uc_txn_id = (SELECT
                UC_TXN_ID FROM OPGCEP2.GCAL_USE_CASE_TRANSACTION WHERE GC_GUID in (SELECT
                rawtohex(A.CA_FUND_POSITION_GUID) as CA_FUND_POSITION_GUID FROM OPGCEP2.CORP_ACTION_FUND_POSITION A,
                OPGCEP2.CORP_ACTION_MASTER_EVENT B WHERE A.CA_MASTER_EVENT_ID=B.CA_MASTER_EVENT_ID AND
                B.CA_EVENT_ID=#EVENTID# and fund_id=#FUNDID#) AND SCENARIO_ID IN ('3201','3301','4502'))and STATUS='NEW'
                and EXPIRATION_TIME > TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP, 'DD-MON-RR HH.MI.SS.FF PM'))
            </Sql>
            <Sql>UPDATE GCE_META.GCAL_WORKFLOW_ACTIVITY SET EXPIRATION_TIME=SYSTIMESTAMP WHERE CUSTOM_DATA_NUM_1 in
                (SELECT TASK_ID FROM OPGCEP2.GCAL_EXECUTION_TASK WHERE TASK_STATE='RETRY' and UC_TXN_ID in (SELECT
                UC_TXN_ID FROM OPGCEP2.GCAL_USE_CASE_TRANSACTION WHERE GC_GUID in(SELECT
                rawtohex(A.CA_FUND_POSITION_GUID) as CA_FUND_POSITION_GUID FROM OPGCEP2.CORP_ACTION_FUND_POSITION A,
                OPGCEP2.CORP_ACTION_MASTER_EVENT B WHERE A.CA_MASTER_EVENT_ID=B.CA_MASTER_EVENT_ID AND
                B.CA_EVENT_ID=#EVENTID# and fund_id=#FUNDID#) AND SCENARIO_ID IN ('3201','3301','4502'))) and
                STATUS='NEW' and EXPIRATION_TIME > TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP, 'DD-MON-RR HH.MI.SS.FF PM'))
            </Sql>
        </DB>
    </FundFlowBoost>

    <!--
        AfterFundLevel will execute  after fund UI release in keyword "CheckFundLevel"
    -->
    <AfterFundLevel>
        <Wait TIMEOUT="1800" Switch="Y">
            <Point TABLENAME="FUND_POSITION" SAVE="FALSE">
                <Sql>
                    <![CDATA[
					SELECT COUNT(*) as NUM FROM OPGCEP2.CORP_ACTION_FUND_POSITION A, OPGCEP2.CORP_ACTION_MASTER_EVENT B WHERE A.CA_MASTER_EVENT_ID=B.CA_MASTER_EVENT_ID AND B.CA_EVENT_ID =#EVENTID# and A.CA_STATUS_TYPE_CD<>'WPV' and FUND_ID=#FUNDID#
					]]></Sql>
                <Columns>
                    <NUM TYPE="TXT" OPERATION="EQUAL">1</NUM>
                </Columns>
            </Point>
        </Wait>
        <DBCheck TERMINATE="FALSE">
            <Point TABLENAME="Cont_Setl_Date1" SAVE="false">
                <Sql>select REGEXP_SUBSTR(REQUEST_MESSAGE, '[^,]+', 1, 10) CSD from (select to_char(REQUEST_MESSAGE) as
                    REQUEST_MESSAGE from OPGCEP2.GCAL_REMEDIATION_TASK WHERE UC_TXN_ID in (SELECT UC_TXN_ID
                    FROM OPGCEP2.GCAL_USE_CASE_TRANSACTION
                    WHERE GC_GUID =
                    (SELECT CA_FUND_POSITION_GUID
                    FROM OPGCEP2.CORP_ACTION_FUND_POSITION A, OPGCEP2.CORP_ACTION_MASTER_EVENT B
                    WHERE A.CA_MASTER_EVENT_ID=B.CA_MASTER_EVENT_ID AND B.CA_EVENT_ID=#EVENTID# and fund_id=#FUNDID#)
                    and request_type='REDS'))
                </Sql>
                <Columns>
                    <CSD TYPE='DB' OPERATION="EQUAL">select to_char(CREATED_AT+14/24, 'YYYYMMDD') as CREATED_AT FROM
                        OPGCEP2.GCAL_REMEDIATION_TASK WHERE UC_TXN_ID in (SELECT UC_TXN_ID
                        FROM OPGCEP2.GCAL_USE_CASE_TRANSACTION
                        WHERE GC_GUID =
                        (SELECT CA_FUND_POSITION_GUID
                        FROM OPGCEP2.CORP_ACTION_FUND_POSITION A, OPGCEP2.CORP_ACTION_MASTER_EVENT B
                        WHERE A.CA_MASTER_EVENT_ID=B.CA_MASTER_EVENT_ID AND B.CA_EVENT_ID=#EVENTID# and
                        fund_id=#FUNDID#)) and request_type='REDS'
                    </CSD>
                </Columns>
            </Point>
            <Point TABLENAME="CORP_ACTION_FUND_POSITION,CORP_ACTION_MASTER_EVENT" SAVE="TRUE"
                   FILENAME="EXOF_14RRJ600209_26B4" SHEETNAME="SUMMARY" SHEETINDEX="1">
                <Sql>SELECT rawtohex(a.CA_FUND_POSITION_GUID)as CA_FUND_POSITION_GUID,to_char(a.FUND_PROCESSING_DATE,
                    'yyyy/mm/dd') as FUND_PROCESSING_DATE,to_char(a.FUND_ADJUSTED_PROCESSING_DATE, 'yyyy/mm/dd
                    HH24:MI:SS') as
                    FUND_ADJUSTED_PROCESSING_DATE,a.FUND_ID,A.CA_STATUS_TYPE_CD,a.ACCOUNTING_ONLY_CD,a.total_share_qty,a.SHORT_LONG_TERM_CD,a.BPOP_LONG_SHARE_QTY,a.BPOP_SHORT_SHARE_QTY,to_char(a.CREATED_AT,
                    'yyyy/mm/dd HH24:MI:SS') as CREATED_AT FROM OPGCEP2.CORP_ACTION_FUND_POSITION A,
                    OPGCEP2.CORP_ACTION_MASTER_EVENT B WHERE A.CA_MASTER_EVENT_ID=B.CA_MASTER_EVENT_ID AND B.CA_EVENT_ID
                    =#EVENTID# And A.FUND_ID = #FUNDID#
                </Sql>
                <Columns>
                </Columns>
            </Point>
        </DBCheck>
    </AfterFundLevel>

    <!--
        FundCartCheck will execute in keyword "CARTAndMCHVerify"
        import !!!!!!:  vbs don't support "DATE","BLOB","CLOB" data type  in database ,so must exclude  these types value or convert to String
    -->
    <FundCartCheck Switch="Y">
        <Sql>SELECT TO_CHAR(RECORD_TYPE_CD) as RECORD_TYPE_CD,TO_CHAR(NAV_PER_SHARE_IMPACT_AMT) as
            NAV_PER_SHARE_IMPACT_AMT, TO_CHAR(MV_CHANGE_BASE_AMT) as MV_CHANGE_BASE_AMT, TO_CHAR(CASH_RECEIVED_AMT) as
            CASH_RECEIVED_AMT,TO_CHAR(bp_impact_pct) as BP_IMPACT_PCT FROM opgcep2.daily_cart_detail WHERE
            ca_fund_position_guid IN
            (SELECT CA_FUND_POSITION_GUID FROM OPGCEP2.CORP_ACTION_FUND_POSITION WHERE ca_master_event_id =
            (SELECT ca_master_event_id FROM OPGCEP2.CORP_ACTION_NOTIFICATION WHERE ca_notification_guid =
            hextoraw(#GUID#)) and FUND_ID=#FUNDID#)
        </Sql>
        <Cart>
            <P>
                <NAV_PER_SHARE_IMPACT_AMT TYPE="TXT" OPERATION="EQUAL"></NAV_PER_SHARE_IMPACT_AMT>
                <MV_CHANGE_BASE_AMT TYPE="TXT" OPERATION="EQUAL">31005</MV_CHANGE_BASE_AMT>
                <CASH_RECEIVED_AMT TYPE="TXT" OPERATION="EQUAL">4000</CASH_RECEIVED_AMT>
                <BP_IMPACT_PCT TYPE="TXT" OPERATION="EQUAL"></BP_IMPACT_PCT>
            </P>
            <C>
                <NAV_PER_SHARE_IMPACT_AMT TYPE="TXT" OPERATION="EQUAL"></NAV_PER_SHARE_IMPACT_AMT>
                <MV_CHANGE_BASE_AMT TYPE="TXT" OPERATION="EQUAL">8526.3</MV_CHANGE_BASE_AMT>
                <CASH_RECEIVED_AMT TYPE="TXT" OPERATION="EQUAL"></CASH_RECEIVED_AMT>
                <BP_IMPACT_PCT TYPE="TXT" OPERATION="EQUAL"></BP_IMPACT_PCT>
            </C>
            <F>
                <NAV_PER_SHARE_IMPACT_AMT TYPE="TXT" OPERATION="EQUAL"></NAV_PER_SHARE_IMPACT_AMT>
                <MV_CHANGE_BASE_AMT TYPE="TXT" OPERATION="EQUAL">-22478.7</MV_CHANGE_BASE_AMT>
                <CASH_RECEIVED_AMT TYPE="TXT" OPERATION="EQUAL"></CASH_RECEIVED_AMT>
                <BP_IMPACT_PCT TYPE="TXT" OPERATION="EQUAL"></BP_IMPACT_PCT>
            </F>
        </Cart>
    </FundCartCheck>

    <!--
        BeforeCancelCICSCheck will execute before CICS cancel in keyword "CARTAndMCHVerify"
        one Point correspond to one SSB TRADE ID,script will use share to find ssbtradeId from table 'GCAL_REMEDIATION_TASK'.
        if exist same share value ,add "_1" after share,order by created_at desc

        SHARE: CICS post share value
        SCREENSHOT: whether take screenshot
        FOLDER:saved screenshot folder,if not exist ,will create
        FILENAME: saved screenshot file name.if exist same name file ,will change filename and save
        COMMENT:if this point verify succefully ,print custom messge to report
    -->
    <BeforeCancelCICSCheck Switch="Y">
        <BRKP>
            <Point SHARE="2000" SCREENSHOT="Y" FOLDER="FULL"
                   FILENAME="BEFORECANCEL_BRKP_EXOF_14RRJ600209_26B4_2000_REDB.png"
                   COMMENT="#SSBTRADEID# verify Successfully">
                <FUNDID TYPE="TXT" OPERATION="EQUAL" COMMENT="#NAME# is #ACTUAL#">RP01</FUNDID>
                <CUSIP TYPE="TXT" OPERATION="EQUAL">002033AA6</CUSIP>
                <SHARE TYPE="TXT" OPERATION="EQUAL">200.000</SHARE>
                <NETAMOUNT TYPE="NUM" OPERATION="EQUAL">51</NETAMOUNT>
                <BASENETAMOUNT TYPE="NUM" OPERATION="EQUAL">51</BASENETAMOUNT>
                <INTEREST TYPE="NUM" OPERATION="EQUAL">0</INTEREST>
                <BASEINTEREST TYPE="NUM" OPERATION="EQUAL">0</BASEINTEREST>
                <LOC TYPE="TXT" OPERATION="EQUAL">DTC</LOC>
                <!--Orignal face-->
                <OF TYPE="TXT" OPERATION="EQUAL">0</OF>
                <CONTSETDT TYPE="TXT" OPERATION="EXPORT"></CONTSETDT>
                <TRADEDATE TYPE="TXT" OPERATION="EXPORT"></TRADEDATE>
                <BRKPFINS TYPE="TXT" OPERATION="EXPORT"></BRKPFINS>
                <CXLED TYPE="TXT" OPERATION="EQUAL">Y</CXLED>
            </Point>
            <Point SHARE="2000_1" SCREENSHOT="Y" FOLDER="FULL"
                   FILENAME="BEFORECANCEL_BRKP_EXOF_14RRJ600209_26B4_2000_REDB_1.png"
                   COMMENT="#SSBTRADEID# verify Successfully">
                <CXLED TYPE="TXT" OPERATION="EQUAL">Y</CXLED>
            </Point>
            <Point SHARE="2000_1_1" SCREENSHOT="Y" FOLDER="FULL"
                   FILENAME="BEFORECANCEL_BRKP_EXOF_14RRJ600209_26B4_2000_REDB_2.png"
                   COMMENT="#SSBTRADEID# verify Successfully">
                <CXLED TYPE="TXT" OPERATION="EQUAL">Y</CXLED>
            </Point>
        </BRKP>
    </BeforeCancelCICSCheck>
    <!--
        AfterCancelCICSCheck will execute after UI CICS cancel in keyword "UICancel" to ensure CICS cancel successfully.
        because of UI cancel is unstable ,so script will execute MCH cancel if  point  verify failed  .so to  ensure all CICS be canceled ,you should add all ssbtradeid point here.
    -->
    <AfterCancelCICSCheck Switch="Y">
        <BRKP>
            <Point SHARE="2000" SCREENSHOT="Y" FOLDER="FULL"
                   FILENAME="AFTERCANCEL_BRKP_EXOF_14RRJ600209_26B4_2000_REDB.png">
                <CXLED TYPE="TXT" OPERATION="EQUAL">Y</CXLED>
            </Point>
            <Point SHARE="2000_1" SCREENSHOT="Y" FOLDER="FULL"
                   FILENAME="AFTERCANCEL_BRKP_EXOF_14RRJ600209_26B4_2000_REDB_1.png">
                <CXLED TYPE="TXT" OPERATION="EQUAL">Y</CXLED>
            </Point>
            <Point SHARE="2000_1_1" SCREENSHOT="Y" FOLDER="FULL"
                   FILENAME="AFTERCANCEL_BRKP_EXOF_14RRJ600209_26B4_2000_REDB_2.png">
                <CXLED TYPE="TXT" OPERATION="EQUAL">Y</CXLED>
            </Point>
            <Point SHARE="2000_1_1_1" SCREENSHOT="Y" FOLDER="FULL"
                   FILENAME="AEFORECANCEL_BRKP_EXOF_14RRJ600209_26B4_2000_REDS_3.png">
                <CXLED TYPE="TXT" OPERATION="EQUAL">Y</CXLED>
            </Point>
        </BRKP>
    </AfterCancelCICSCheck>
</CheckPoints>